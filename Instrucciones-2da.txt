SEGUNDA INSTANCIA
=================

Trabaje solo en esta carpeta, al finalizar debe entregar la carpeta al docente.

Guarde su examen en un archivo de python, el nombre del mismo debe seguir el siguiente formato:

ApellidoPaterno_ApellidoMaterno__Nombre1_Nombre2_Nombre3__GA.py

Pregunta 1
**********
[15 puntos] Defina una función que permita leer un archivo el contenido de un archivo,
            cada linea contiene cuatro datos que corresponden a puntos en un plano cartesiano, separados por #
            código#nombre#coordenada en x#coordenada en y

            La función debe llamarse: leer_puntos.
            La función debe recibir los parámetros: ruta_archivo.
            La función debe tener documentación.
            La función debe encontrar todos los puntos válidos, es decir todos los que contengan los cuatro datos, 
            el código y el nombre son cadenas y las coordenadas son flotantes; cada línea se debe representar por una lista, 
            donde cada lista contiene: código, nombre, coordenada en x y coordenada en y.
            La función debe devolver la lista de listas; si la lista no tiene puntos válidos devolver None.

Pregunta 2
**********
[15 puntos] Defina una función que filtre puntos de una lista de puntos. Los puntos se filtran a partir de una
            circunferencia, es decir todos los puntos dentro de la cicunferencia son válidos.

            La función debe llamarse: filtrar_puntos.
            La función debe recibir los parámetros: puntos, origen, distancia;
            puntos, es una lista de listas donde cada lista contiene:
                la primera posición corresponde al código del punto, es una cadena.
                la segunda posición corresponde al nombre del punto, es una cadena.
                la tercera posición corresponde a la coordenada x del punto, es un flotante.
                la cuarta posición corresponde a la coordenada y del punto, es un flotante.
            origen, es una lista que contiene:
                la primera posición corresponde a la coordenada x del centro, es un flotante.
                la segunda posición corresponde a la coordenada y del centro, es un flotante.
            distancia, es el radio, es un flotante.
            La función debe tener documentación.
            La función debe seleccionar sólo los puntos válidos y crear una nueva lista con los mismos.
            La función debe devolver una lista de listas con los puntos válidos, si no existen puntos devolver None.

Pregunta 3
**********
[15 puntos] Defina una función que permita determinar la intersección de dos regiones.

            La función debe llamarse: obtener_intersección.
            La función debe recibir los parámetros: región1, región2:
            región1, región2 son listas y cada una contiene una lista de listas, donde cada lista contiene:
                la primera posición corresponde al código del punto, es una cadena.
                la segunda posición corresponde al nombre del punto, es una cadena.
                la tercera posición corresponde a la coordenada x del punto, es un flotante.
                la cuarta posición corresponde a la coordenada y del punto, es un flotante.
            La función debe tener documentación.
            La función debe obtener todos los puntos se encuentren en las dos regiones al mismo tiempo.
            La función debe devolver una lista de listas con los puntos válidos, si no existen puntos devolver None.

Pregunta 4
**********
[55 puntos] Se tienen puntos en un archivo llamado puntos.data
            Realice un programa lea los puntos de dos regiones (origen y distancia),
            que permita encontrar los puntos comunes del archivo puntos.data.

            Obtenga los puntos de las dos regiones.
            Obtenga los puntos comunes.
            Guarde los puntos puntos comunes en un archivo llamado comunes.data
            Archivo con los puntos comunes.

FIN DE LAS INSTRUCCIONES
========================
